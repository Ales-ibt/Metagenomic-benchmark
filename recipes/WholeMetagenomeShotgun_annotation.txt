#########################################################
# Taxonomic annotation of Whole Metagenome Shotgun data #
#########################################################

##### This recipe describes the analysis made using the WMS paired-end sequences (Lindgreen et al. 2016) in order to test the methods reported in the "Analysis of sequencing strategies and tools for taxonomic annotation: Defining standards for progressive metagenomics" paper. Eukariotic reads were filtered and raw sequences were used as input for each tested software. The annotation output were formatted in order to obtain a relational table containing the sequence id, the taxid of their respective annotation and the score (reads_ranking.txt table). Examples of the intermediate results generated from each software are available in the examples directory of this repository. Below are described the commands used to run every program and to convert the resulting annotation table into the reads.ranking.txt table. From the latter table, we evaluated the software performance at every taxonomic level as is described in the performance_evaluation.txt recipe.

## 1.- Kraken v0.10.5-beta
# The concatenated fastq obtained from R1 and R2 was used as input for Kraken.

$ kraken --preload --db /Databases/Kraken/ --threads 16 --output kraken.out file.fastq

# The kraken output classification file was used to generate the reads_ranking.txt table.


== TINA ==


## 2.- CLARK v1.2.3.1

$ classify_metagenome.sh -k 21 -P file_R1.fastq file_R2.fastq -R /PATH/clark.results -n 32 -m 0

# The clark.results.csv table was used to obtain the reads_ranking.txt table.


## 3.- MetaPhlAn2 v2.2.0
# As reads length was 100bp, we stablished -min_alignment_len parameter in 95

$ metaphlan2.py file_1.fq,file_2.fq --mpa_pkl mpa_v20_m200.pkl --bowtie2db mpa_v20_m200 --bt2_ps sensitive-local --bowtie2out file.bowtie2.bz2 --samout file.sam --nproc 32 --input_type fastq --min_alignment_len 95 > metaphlan_out.txt

# The file.sam was used to obtain the reads_ranking.txt table.


## 4.- MOCAT v1.3

$ MOCAT.pl -sf samples.txt -rtf
$ MOCAT.pl -sf samples.txt -s mOTU.v1.padded -r reads.processed -identity 97
$ MOCAT.pl -sf samples.txt -f mOTU.v1.padded -r reads.processed -identity 97
$ MOCAT.pl -sf samples.txt -p mOTU.v1.padded -r reads.processed -identity 97 -mode mOTU -o Results
$ MOCAT.pl -sf samples.txt -s RefMG.v1.padded -r mOTU.v1.padded -e -identity 97
$ MOCAT.pl -sf samples.txt -f RefMG.v1.padded -r mOTU.v1.padded -e -identity 97
$ MOCAT.pl -sf samples.txt -p RefMG.v1.padded -r mOTU.v1.padded -e -identity 97 -mode RefMG -previous_db_calc_tax_stats_file -o Results

# As in the case of MetaPhlAn2, the mapping output was used to obtain the reads_ranking.txt table


## 5.- Parallel-meta v2.4.1 (patched)
# Parallel-meta includes the RDP (R), GreenGenes (G) and SILVA (S) databases in the v2.4.1 distribution. The patched included in the bin directory of this repository activates the Metaxa2 database option with the flag "X" in -d parameter.

$ parallel-meta -b B -m file.fastq -d X|R|G|S -n 32

# The output used to generate the reads_ranking.txt table was the classification.txt file.


## 6.- Metaxa2 v2.2.1

$ metaxa2 -1 file_R1.fq -2 file_R2.fq -o metaxa_out -f fastq --plus T --fasta F --cpu 32 -d /PATH/database.fasta

# The output used to generate the reads_ranking.txt table was the metaxa_out.taxonomy.txt file






